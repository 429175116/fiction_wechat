<style lang="less">
  #getUserInfo {
    position:fixed;
    top:0;
    width:750rpx !important;
    height:100% !important;
    padding:0rpx !important;
    z-index:999;
    background-color:rgba(255, 255, 255, 0);
    color:#fff;
  }
  .nav{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 750rpx;
    height: 90rpx;
    border: 1rpx solid #f0f0f0;
  }
  .nav view{
    margin: 0 23rpx;
    font-size: 30rpx;
    color: #b7b7b7;
  }
  .nav view view{
    width: 25rpx;
    height: 0rpx;
    padding: 0;
    margin: auto;
    margin-top: 4rpx;
    border: 2rpx solid #fff;
  }
  .nav .action{
    color: #333;
  }
  .nav .action view{
    border: 2rpx solid #00c0a4;
  }
  .features{
    position: absolute;
    top: 0;
    right: 10rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 90rpx;
    width: 145rpx;
  }
  .features image{
    width: 28rpx;
    height: 28rpx;
    margin: 0 23rpx;
  }
  .bookList{
    width: 750rpx;
    height: auto;
    margin-bottom: 120rpx;
  }
  .list{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 750rpx;
    height: 175rpx;
    border-bottom: 1rpx solid #f0f0f0;
    background-color: #fafafa;
    padding: 20rpx 20rpx;
  }
  .list .cover{
    width: 107rpx;
    height: 146rpx;
  }
  .list .cover image{
    width: 107rpx;
    height: 146rpx;
  }
  .list .info{
    margin-left: 20rpx;
    width: 497rpx;
    height: 146rpx;
  }
  .list .del{
    width: 100rpx;
    height: 146rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .list .info view{
    width: 100%;
    height: 40rpx;
    line-height: 40rpx;
    color: #999;
    font-size: 25rpx;
    overflow:hidden;
    text-overflow:ellipsis;
    white-space:nowrap;
  }
  .list .info .title{
    color: #333;
    height: 60rpx;
    line-height: 70rpx;
    font-size: 38rpx;
    font-size: 600;
  }
</style>
<template>
  <view>
    <!-- <view class="nav">
      <view class="action">
        书架
        <view></view>
      </view>
      <view>
        关注
        <view></view>
      </view>
    </view> -->
    <!-- <view class="features">
      <image src="/img/search.png" />
      <image src="/img/plus.png" />
    </view> -->
    <view class="bookList">
      <!-- <view class="list" @tap="goBookDetails" data-id="1">
        <view class="cover">
          <image src="/img/1.png" />
        </view>
        <view class="info">
          <view class="title">书名书名书名书名书名书名</view>
          <view>描述描述描述描述描述描述描述描述描述</view>
          <view>描述描述描述描述描述描述描述描述描述描述描述描述</view>
        </view>
      </view> -->
      <block wx:for="{{bookshelfList}}" key="index" index="index" item="item">
        <view class="list">
          <view class="cover" @tap="goBookDetails" data-id="{{item.id}}">
            <image src="{{imgUrl + item.novel.img}}/img/1.png" />
          </view>
          <view class="info" @tap="goBookDetails" data-id="{{item.id}}">
            <view class="title">{{item.novel.name}}</view>
            <view>{{item.novel.name}} · {{item.novel.name}}</view>
            <view>{{item.novel.intro}}</view>
          </view>
          <view class="del" @tap="deleteShelf" data-id="{{item.id}}">
            <icon class="iconfont icon-mianfei" />
          </view>
        </view>
      </block>
      <view wx:if="{{bookshelfList.length == 0}}" class="dataNullShow">暂无收藏</view>
    </view>
    <view>
      <button open-type="getUserInfo" wx:if="{{authorizationButton}}" id='getUserInfo' lang="zh_CN" @getuserinfo="onGetUserInfo"></button>
    </view>
    <nav @childFn.user="goPage" />
  </view>
</template>
<script>
import wepy from 'wepy'
import nav from '../components/nav' // 底部导航
export default class Bookshelf extends wepy.page {
  config = {
    navigationBarTitleText: '书架'
  }
  // 生命组件ID
  components = {
  // 底部导航
    nav: nav
  }

  mixins = []

  data = {
    authorizationButton: true, // 控制授权按钮是否显示
    bookshelfList: [] // 书架列表数据
  }

  computed = {}

  methods = {
    // 底部导航跳转
    goPage (url, evt) {
      // 销毁当前页{跳转}
      this.$redirect(url)
    },
    // 进入书本详情
    goBookDetails(e) {
      let id = e.currentTarget.dataset.id
      this.$navigate(`/pages/details?bookid=${id}`)
    },
    deleteShelf(e) {
      wx.showModal({
        title: '',
        content: '确认删除？',
        success: res => {
          if (!res.cancel) {
              //点击确定
              this.delStore(e)
          }
        }
      })
    }
  }

  events = {}

  onLoad(options) {
    // 获取图片路径前缀
    this.imgUrl = this.$parent.globalData.imgUrl
    // 获取用户信息
    this.onGetUserInfo()
  }
  // 取消收藏
  delStore(e) {
    let id = e.currentTarget.dataset.id
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/unStoreBook/${1}`,
      method: 'PUT',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      success: data => {
        if (data.data.success) {
          wx.showModal({
            title: '',
            content: '删除成功'
          })
          this.myStore()
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 用户收藏的书籍
  myStore() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/myStore`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      success: data => {
        if (data.data.success) {
          this.bookshelfList = data.data.user_stores
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 获取用户信息
  onGetUserInfo() {
    // 查看是否授权
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称
          wx.getUserInfo({
            success: res => {
              this.userInfo = res.userInfo
              if (this.userInfo) {
                this.authorizationButton = false
                this.avatarUrl = this.userInfo.avatarUrl
                this.nickName = this.userInfo.nickName
                // 数据生效
                this.$apply()
                // 提交用户信息
                this.setUserInfo(this.userInfo)
                // 登陆
                // this.userLogin(this.userInfo)
                this.$parent.globalData.userInfo = this.userInfo
                this.$apply()
              }
            }
          })
        }
      }
    })
  }
  // 提交用户信息
  setUserInfo(userInfo) {
    if (this.$parent.globalData.openId) {
      // 用户收藏的书籍
      this.myStore()
      return
    }
    wepy.login({
      success: res => {
        if (res.code) {
          this.code = res.code
          wx.request({
            url: `${this.$parent.globalData.requestUrl}/api/addOrUpdateUser`,
            method: 'POST',
            data: {
              code: res.code,
              nick_name: this.userInfo.nickName,
              profile: this.userInfo.avatarUrl
            },
            success: data => {
              if (data.data.success) {
                // 获取用户信息,及openID  并存入全局
                this.userInfo = data.data.user
                this.openId = this.userInfo.open_id
                this.$parent.globalData.userInfo = this.userInfo
                this.$parent.globalData.openId = this.openId
                // 用户收藏的书籍
                this.myStore()
                this.$apply()
              } else {
                wx.showModal({
                  title: '',
                  content: data.data.errmsg
                })
              }
            }
          })
        } else {
          console.log('登录失败！' + res.errMsg)
        }
      }
    })
  }
}
</script>
